apiVersion: kubeadm.k8s.io/v1beta4
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789abcdef
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "${FIRST_NODE_IP}"
  bindPort: 6443
nodeRegistration:
  criSocket: unix:///var/run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  taints: null
  name: "${NODE_NAME}"
  kubeletExtraArgs:
    - name: node-ip
      value: "${FIRST_NODE_IP}"
---
# https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  timeoutForControlPlane: 4m0s
  extraArgs:
    - name: advertise-address
      value: "${FIRST_NODE_IP}"
    - name: service-cluster-ip-range
      value: "${SERVICE_CIDR}"
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
# https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/
controllerManager:
  extraArgs:
    - name: allocate-node-cidrs
      value: "true"
    - name: cluster-cidr
      value: "${POD_CIDR}"
    - name: service-cluster-ip-range
      value: "${SERVICE_CIDR}"
    ${DISABLE_NODE_CIDR_MASK_SIZE4}- name: "node-cidr-mask-size-ipv4"
    ${DISABLE_NODE_CIDR_MASK_SIZE4}  value: "${NODE_CIDR_MASK_SIZE4}"
    ${DISABLE_NODE_CIDR_MASK_SIZE6}- name: "node-cidr-mask-size-ipv6"
    ${DISABLE_NODE_CIDR_MASK_SIZE6}  value: "${NODE_CIDR_MASK_SIZE6}"
    ${DISABLE_NODE_CIDR_MASK}- name: "node-cidr-mask-size"
    ${DISABLE_NODE_CIDR_MASK}  value: "${NODE_CIDR_MASK_SIZE}"
etcd:
  local:
    dataDir: /var/lib/etcd
    extraArgs:
      # default is 16MB, use 10GB for tests
      - name: quota-backend-bytes
        value: "10740000000"
      - name: auto-compaction-mode
        value: "revision"
      - name: auto-compaction-retention
        value: "10"
imageRepository: registry.k8s.io
kubernetesVersion: ${K8_VERSION}
networking:
  dnsDomain: cluster.local
  podSubnet: "${FIRST_POD_CIDR}"
  serviceSubnet: "${FIRST_SERVICE_CIDR}"
controlPlaneEndpoint: "${SAFE6_FIRST_NODE_IP}:6443"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
conntrack:
  maxPerCore: 0
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
maxPods: 5000
cgroupDriver: "systemd"
cpuManagerPolicy: "static"
reservedSystemCPUs: "0-5"
containerRuntimeEndpoint: unix:///var/run/containerd/containerd.sock

