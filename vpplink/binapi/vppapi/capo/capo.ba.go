// Code generated by GoVPP's binapi-generator. DO NOT EDIT.

// Package capo contains generated bindings for API file capo.api.
//
// Contents:
//
//	 4 enums
//	 8 structs
//	 2 unions
//	24 messages
package capo

import (
	"strconv"

	_ "github.com/projectcalico/vpp-dataplane/v3/vpplink/binapi/vppapi/fib_types"
	ip_types "github.com/projectcalico/vpp-dataplane/v3/vpplink/binapi/vppapi/ip_types"
	api "go.fd.io/govpp/api"
	codec "go.fd.io/govpp/codec"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion2

const (
	APIFile    = "capo"
	APIVersion = "0.1.0"
	VersionCrc = 0xf7ab3600
)

// CapoEntryType defines enum 'capo_entry_type'.
type CapoEntryType uint8

const (
	CAPO_CIDR        CapoEntryType = 0
	CAPO_PORT_RANGE  CapoEntryType = 1
	CAPO_PORT_IP_SET CapoEntryType = 2
	CAPO_IP_SET      CapoEntryType = 3
)

var (
	CapoEntryType_name = map[uint8]string{
		0: "CAPO_CIDR",
		1: "CAPO_PORT_RANGE",
		2: "CAPO_PORT_IP_SET",
		3: "CAPO_IP_SET",
	}
	CapoEntryType_value = map[string]uint8{
		"CAPO_CIDR":        0,
		"CAPO_PORT_RANGE":  1,
		"CAPO_PORT_IP_SET": 2,
		"CAPO_IP_SET":      3,
	}
)

func (x CapoEntryType) String() string {
	s, ok := CapoEntryType_name[uint8(x)]
	if ok {
		return s
	}
	return "CapoEntryType(" + strconv.Itoa(int(x)) + ")"
}

// CapoIpsetType defines enum 'capo_ipset_type'.
type CapoIpsetType uint8

const (
	CAPO_IP          CapoIpsetType = 0
	CAPO_IP_AND_PORT CapoIpsetType = 1
	CAPO_NET         CapoIpsetType = 2
)

var (
	CapoIpsetType_name = map[uint8]string{
		0: "CAPO_IP",
		1: "CAPO_IP_AND_PORT",
		2: "CAPO_NET",
	}
	CapoIpsetType_value = map[string]uint8{
		"CAPO_IP":          0,
		"CAPO_IP_AND_PORT": 1,
		"CAPO_NET":         2,
	}
)

func (x CapoIpsetType) String() string {
	s, ok := CapoIpsetType_name[uint8(x)]
	if ok {
		return s
	}
	return "CapoIpsetType(" + strconv.Itoa(int(x)) + ")"
}

// CapoRuleAction defines enum 'capo_rule_action'.
type CapoRuleAction uint8

const (
	CAPO_ALLOW CapoRuleAction = 0
	CAPO_DENY  CapoRuleAction = 1
	CAPO_LOG   CapoRuleAction = 2
	CAPO_PASS  CapoRuleAction = 3
)

var (
	CapoRuleAction_name = map[uint8]string{
		0: "CAPO_ALLOW",
		1: "CAPO_DENY",
		2: "CAPO_LOG",
		3: "CAPO_PASS",
	}
	CapoRuleAction_value = map[string]uint8{
		"CAPO_ALLOW": 0,
		"CAPO_DENY":  1,
		"CAPO_LOG":   2,
		"CAPO_PASS":  3,
	}
)

func (x CapoRuleAction) String() string {
	s, ok := CapoRuleAction_name[uint8(x)]
	if ok {
		return s
	}
	return "CapoRuleAction(" + strconv.Itoa(int(x)) + ")"
}

// CapoRuleFilterType defines enum 'capo_rule_filter_type'.
type CapoRuleFilterType uint8

const (
	CAPO_RULE_FILTER_NONE_TYPE CapoRuleFilterType = 0
	CAPO_RULE_FILTER_ICMP_TYPE CapoRuleFilterType = 1
	CAPO_RULE_FILTER_ICMP_CODE CapoRuleFilterType = 2
	CAPO_RULE_FILTER_L4_PROTO  CapoRuleFilterType = 3
)

var (
	CapoRuleFilterType_name = map[uint8]string{
		0: "CAPO_RULE_FILTER_NONE_TYPE",
		1: "CAPO_RULE_FILTER_ICMP_TYPE",
		2: "CAPO_RULE_FILTER_ICMP_CODE",
		3: "CAPO_RULE_FILTER_L4_PROTO",
	}
	CapoRuleFilterType_value = map[string]uint8{
		"CAPO_RULE_FILTER_NONE_TYPE": 0,
		"CAPO_RULE_FILTER_ICMP_TYPE": 1,
		"CAPO_RULE_FILTER_ICMP_CODE": 2,
		"CAPO_RULE_FILTER_L4_PROTO":  3,
	}
)

func (x CapoRuleFilterType) String() string {
	s, ok := CapoRuleFilterType_name[uint8(x)]
	if ok {
		return s
	}
	return "CapoRuleFilterType(" + strconv.Itoa(int(x)) + ")"
}

// CapoEntrySetID defines type 'capo_entry_set_id'.
type CapoEntrySetID struct {
	SetID uint32 `binapi:"u32,name=set_id" json:"set_id,omitempty"`
}

// CapoIpsetMember defines type 'capo_ipset_member'.
type CapoIpsetMember struct {
	Val CapoIpsetMemberValUnion `binapi:"capo_ipset_member_val,name=val" json:"val,omitempty"`
}

// CapoPolicyItem defines type 'capo_policy_item'.
type CapoPolicyItem struct {
	IsInbound bool   `binapi:"bool,name=is_inbound" json:"is_inbound,omitempty"`
	RuleID    uint32 `binapi:"u32,name=rule_id" json:"rule_id,omitempty"`
}

// CapoPortRange defines type 'capo_port_range'.
type CapoPortRange struct {
	Start uint16 `binapi:"u16,name=start" json:"start,omitempty"`
	End   uint16 `binapi:"u16,name=end" json:"end,omitempty"`
}

// CapoRule defines type 'capo_rule'.
type CapoRule struct {
	Af         ip_types.AddressFamily `binapi:"address_family,name=af" json:"af,omitempty"`
	Action     CapoRuleAction         `binapi:"capo_rule_action,name=action" json:"action,omitempty"`
	Filters    [3]CapoRuleFilter      `binapi:"capo_rule_filter[3],name=filters" json:"filters,omitempty"`
	NumEntries uint32                 `binapi:"u32,name=num_entries" json:"-"`
	Matches    []CapoRuleEntry        `binapi:"capo_rule_entry[num_entries],name=matches" json:"matches,omitempty"`
}

// CapoRuleEntry defines type 'capo_rule_entry'.
type CapoRuleEntry struct {
	IsSrc bool               `binapi:"bool,name=is_src" json:"is_src,omitempty"`
	IsNot bool               `binapi:"bool,name=is_not" json:"is_not,omitempty"`
	Type  CapoEntryType      `binapi:"capo_entry_type,name=type" json:"type,omitempty"`
	Data  CapoEntryDataUnion `binapi:"capo_entry_data,name=data" json:"data,omitempty"`
}

// CapoRuleFilter defines type 'capo_rule_filter'.
type CapoRuleFilter struct {
	Value       uint32             `binapi:"u32,name=value" json:"value,omitempty"`
	Type        CapoRuleFilterType `binapi:"capo_rule_filter_type,name=type" json:"type,omitempty"`
	ShouldMatch uint8              `binapi:"u8,name=should_match" json:"should_match,omitempty"`
}

// CapoThreeTuple defines type 'capo_three_tuple'.
type CapoThreeTuple struct {
	Address ip_types.Address `binapi:"address,name=address" json:"address,omitempty"`
	L4Proto uint8            `binapi:"u8,name=l4_proto" json:"l4_proto,omitempty"`
	Port    uint16           `binapi:"u16,name=port" json:"port,omitempty"`
}

// CapoEntryDataUnion defines union 'capo_entry_data'.
type CapoEntryDataUnion struct {
	// CapoEntryDataUnion can be one of:
	// - Cidr *ip_types.Prefix
	// - PortRange *CapoPortRange
	// - SetID *CapoEntrySetID
	XXX_UnionData [18]byte
}

func CapoEntryDataUnionCidr(a ip_types.Prefix) (u CapoEntryDataUnion) {
	u.SetCidr(a)
	return
}
func (u *CapoEntryDataUnion) SetCidr(a ip_types.Prefix) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	buf.EncodeUint8(uint8(a.Address.Af))
	buf.EncodeBytes(a.Address.Un.XXX_UnionData[:], 16)
	buf.EncodeUint8(a.Len)
}
func (u *CapoEntryDataUnion) GetCidr() (a ip_types.Prefix) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	a.Address.Af = ip_types.AddressFamily(buf.DecodeUint8())
	copy(a.Address.Un.XXX_UnionData[:], buf.DecodeBytes(16))
	a.Len = buf.DecodeUint8()
	return
}

func CapoEntryDataUnionPortRange(a CapoPortRange) (u CapoEntryDataUnion) {
	u.SetPortRange(a)
	return
}
func (u *CapoEntryDataUnion) SetPortRange(a CapoPortRange) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	buf.EncodeUint16(a.Start)
	buf.EncodeUint16(a.End)
}
func (u *CapoEntryDataUnion) GetPortRange() (a CapoPortRange) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	a.Start = buf.DecodeUint16()
	a.End = buf.DecodeUint16()
	return
}

func CapoEntryDataUnionSetID(a CapoEntrySetID) (u CapoEntryDataUnion) {
	u.SetSetID(a)
	return
}
func (u *CapoEntryDataUnion) SetSetID(a CapoEntrySetID) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	buf.EncodeUint32(a.SetID)
}
func (u *CapoEntryDataUnion) GetSetID() (a CapoEntrySetID) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	a.SetID = buf.DecodeUint32()
	return
}

// CapoIpsetMemberValUnion defines union 'capo_ipset_member_val'.
type CapoIpsetMemberValUnion struct {
	// CapoIpsetMemberValUnion can be one of:
	// - Address *ip_types.Address
	// - Prefix *ip_types.Prefix
	// - Tuple *CapoThreeTuple
	XXX_UnionData [20]byte
}

func CapoIpsetMemberValUnionAddress(a ip_types.Address) (u CapoIpsetMemberValUnion) {
	u.SetAddress(a)
	return
}
func (u *CapoIpsetMemberValUnion) SetAddress(a ip_types.Address) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	buf.EncodeUint8(uint8(a.Af))
	buf.EncodeBytes(a.Un.XXX_UnionData[:], 16)
}
func (u *CapoIpsetMemberValUnion) GetAddress() (a ip_types.Address) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	a.Af = ip_types.AddressFamily(buf.DecodeUint8())
	copy(a.Un.XXX_UnionData[:], buf.DecodeBytes(16))
	return
}

func CapoIpsetMemberValUnionPrefix(a ip_types.Prefix) (u CapoIpsetMemberValUnion) {
	u.SetPrefix(a)
	return
}
func (u *CapoIpsetMemberValUnion) SetPrefix(a ip_types.Prefix) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	buf.EncodeUint8(uint8(a.Address.Af))
	buf.EncodeBytes(a.Address.Un.XXX_UnionData[:], 16)
	buf.EncodeUint8(a.Len)
}
func (u *CapoIpsetMemberValUnion) GetPrefix() (a ip_types.Prefix) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	a.Address.Af = ip_types.AddressFamily(buf.DecodeUint8())
	copy(a.Address.Un.XXX_UnionData[:], buf.DecodeBytes(16))
	a.Len = buf.DecodeUint8()
	return
}

func CapoIpsetMemberValUnionTuple(a CapoThreeTuple) (u CapoIpsetMemberValUnion) {
	u.SetTuple(a)
	return
}
func (u *CapoIpsetMemberValUnion) SetTuple(a CapoThreeTuple) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	buf.EncodeUint8(uint8(a.Address.Af))
	buf.EncodeBytes(a.Address.Un.XXX_UnionData[:], 16)
	buf.EncodeUint8(a.L4Proto)
	buf.EncodeUint16(a.Port)
}
func (u *CapoIpsetMemberValUnion) GetTuple() (a CapoThreeTuple) {
	buf := codec.NewBuffer(u.XXX_UnionData[:])
	a.Address.Af = ip_types.AddressFamily(buf.DecodeUint8())
	copy(a.Address.Un.XXX_UnionData[:], buf.DecodeBytes(16))
	a.L4Proto = buf.DecodeUint8()
	a.Port = buf.DecodeUint16()
	return
}

// CapoConfigurePolicies defines message 'capo_configure_policies'.
// InProgress: the message form may change in the future versions
type CapoConfigurePolicies struct {
	SwIfIndex          uint32   `binapi:"u32,name=sw_if_index" json:"sw_if_index,omitempty"`
	NumIngressPolicies uint32   `binapi:"u32,name=num_ingress_policies" json:"num_ingress_policies,omitempty"`
	NumEgressPolicies  uint32   `binapi:"u32,name=num_egress_policies" json:"num_egress_policies,omitempty"`
	TotalIds           uint32   `binapi:"u32,name=total_ids" json:"-"`
	PolicyIds          []uint32 `binapi:"u32[total_ids],name=policy_ids" json:"policy_ids,omitempty"`
}

func (m *CapoConfigurePolicies) Reset()               { *m = CapoConfigurePolicies{} }
func (*CapoConfigurePolicies) GetMessageName() string { return "capo_configure_policies" }
func (*CapoConfigurePolicies) GetCrcString() string   { return "3ca1772c" }
func (*CapoConfigurePolicies) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoConfigurePolicies) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4                    // m.SwIfIndex
	size += 4                    // m.NumIngressPolicies
	size += 4                    // m.NumEgressPolicies
	size += 4                    // m.TotalIds
	size += 4 * len(m.PolicyIds) // m.PolicyIds
	return size
}
func (m *CapoConfigurePolicies) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.SwIfIndex)
	buf.EncodeUint32(m.NumIngressPolicies)
	buf.EncodeUint32(m.NumEgressPolicies)
	buf.EncodeUint32(uint32(len(m.PolicyIds)))
	for i := 0; i < len(m.PolicyIds); i++ {
		var x uint32
		if i < len(m.PolicyIds) {
			x = uint32(m.PolicyIds[i])
		}
		buf.EncodeUint32(x)
	}
	return buf.Bytes(), nil
}
func (m *CapoConfigurePolicies) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.SwIfIndex = buf.DecodeUint32()
	m.NumIngressPolicies = buf.DecodeUint32()
	m.NumEgressPolicies = buf.DecodeUint32()
	m.TotalIds = buf.DecodeUint32()
	m.PolicyIds = make([]uint32, m.TotalIds)
	for i := 0; i < len(m.PolicyIds); i++ {
		m.PolicyIds[i] = buf.DecodeUint32()
	}
	return nil
}

// CapoConfigurePoliciesReply defines message 'capo_configure_policies_reply'.
// InProgress: the message form may change in the future versions
type CapoConfigurePoliciesReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *CapoConfigurePoliciesReply) Reset()               { *m = CapoConfigurePoliciesReply{} }
func (*CapoConfigurePoliciesReply) GetMessageName() string { return "capo_configure_policies_reply" }
func (*CapoConfigurePoliciesReply) GetCrcString() string   { return "e8d4e804" }
func (*CapoConfigurePoliciesReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoConfigurePoliciesReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *CapoConfigurePoliciesReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *CapoConfigurePoliciesReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

// CapoControlPing defines message 'capo_control_ping'.
// InProgress: the message form may change in the future versions
type CapoControlPing struct{}

func (m *CapoControlPing) Reset()               { *m = CapoControlPing{} }
func (*CapoControlPing) GetMessageName() string { return "capo_control_ping" }
func (*CapoControlPing) GetCrcString() string   { return "51077d14" }
func (*CapoControlPing) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoControlPing) Size() (size int) {
	if m == nil {
		return 0
	}
	return size
}
func (m *CapoControlPing) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	return buf.Bytes(), nil
}
func (m *CapoControlPing) Unmarshal(b []byte) error {
	return nil
}

// CapoControlPingReply defines message 'capo_control_ping_reply'.
// InProgress: the message form may change in the future versions
type CapoControlPingReply struct {
	Retval      int32  `binapi:"i32,name=retval" json:"retval,omitempty"`
	ClientIndex uint32 `binapi:"u32,name=client_index" json:"client_index,omitempty"`
	VpePID      uint32 `binapi:"u32,name=vpe_pid" json:"vpe_pid,omitempty"`
}

func (m *CapoControlPingReply) Reset()               { *m = CapoControlPingReply{} }
func (*CapoControlPingReply) GetMessageName() string { return "capo_control_ping_reply" }
func (*CapoControlPingReply) GetCrcString() string   { return "f6b0b8ca" }
func (*CapoControlPingReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoControlPingReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	size += 4 // m.ClientIndex
	size += 4 // m.VpePID
	return size
}
func (m *CapoControlPingReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	buf.EncodeUint32(m.ClientIndex)
	buf.EncodeUint32(m.VpePID)
	return buf.Bytes(), nil
}
func (m *CapoControlPingReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	m.ClientIndex = buf.DecodeUint32()
	m.VpePID = buf.DecodeUint32()
	return nil
}

// CapoGetVersion defines message 'capo_get_version'.
// InProgress: the message form may change in the future versions
type CapoGetVersion struct{}

func (m *CapoGetVersion) Reset()               { *m = CapoGetVersion{} }
func (*CapoGetVersion) GetMessageName() string { return "capo_get_version" }
func (*CapoGetVersion) GetCrcString() string   { return "51077d14" }
func (*CapoGetVersion) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoGetVersion) Size() (size int) {
	if m == nil {
		return 0
	}
	return size
}
func (m *CapoGetVersion) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	return buf.Bytes(), nil
}
func (m *CapoGetVersion) Unmarshal(b []byte) error {
	return nil
}

// CapoGetVersionReply defines message 'capo_get_version_reply'.
// InProgress: the message form may change in the future versions
type CapoGetVersionReply struct {
	Major uint32 `binapi:"u32,name=major" json:"major,omitempty"`
	Minor uint32 `binapi:"u32,name=minor" json:"minor,omitempty"`
}

func (m *CapoGetVersionReply) Reset()               { *m = CapoGetVersionReply{} }
func (*CapoGetVersionReply) GetMessageName() string { return "capo_get_version_reply" }
func (*CapoGetVersionReply) GetCrcString() string   { return "9b32cf86" }
func (*CapoGetVersionReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoGetVersionReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Major
	size += 4 // m.Minor
	return size
}
func (m *CapoGetVersionReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.Major)
	buf.EncodeUint32(m.Minor)
	return buf.Bytes(), nil
}
func (m *CapoGetVersionReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Major = buf.DecodeUint32()
	m.Minor = buf.DecodeUint32()
	return nil
}

// CapoIpsetAddDelMembers defines message 'capo_ipset_add_del_members'.
// InProgress: the message form may change in the future versions
type CapoIpsetAddDelMembers struct {
	SetID   uint32            `binapi:"u32,name=set_id" json:"set_id,omitempty"`
	IsAdd   bool              `binapi:"bool,name=is_add" json:"is_add,omitempty"`
	Len     uint32            `binapi:"u32,name=len" json:"-"`
	Members []CapoIpsetMember `binapi:"capo_ipset_member[len],name=members" json:"members,omitempty"`
}

func (m *CapoIpsetAddDelMembers) Reset()               { *m = CapoIpsetAddDelMembers{} }
func (*CapoIpsetAddDelMembers) GetMessageName() string { return "capo_ipset_add_del_members" }
func (*CapoIpsetAddDelMembers) GetCrcString() string   { return "e7056d10" }
func (*CapoIpsetAddDelMembers) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoIpsetAddDelMembers) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.SetID
	size += 1 // m.IsAdd
	size += 4 // m.Len
	for j1 := 0; j1 < len(m.Members); j1++ {
		var s1 CapoIpsetMember
		_ = s1
		if j1 < len(m.Members) {
			s1 = m.Members[j1]
		}
		size += 1 * 20 // s1.Val
	}
	return size
}
func (m *CapoIpsetAddDelMembers) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.SetID)
	buf.EncodeBool(m.IsAdd)
	buf.EncodeUint32(uint32(len(m.Members)))
	for j0 := 0; j0 < len(m.Members); j0++ {
		var v0 CapoIpsetMember // Members
		if j0 < len(m.Members) {
			v0 = m.Members[j0]
		}
		buf.EncodeBytes(v0.Val.XXX_UnionData[:], 20)
	}
	return buf.Bytes(), nil
}
func (m *CapoIpsetAddDelMembers) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.SetID = buf.DecodeUint32()
	m.IsAdd = buf.DecodeBool()
	m.Len = buf.DecodeUint32()
	m.Members = make([]CapoIpsetMember, m.Len)
	for j0 := 0; j0 < len(m.Members); j0++ {
		copy(m.Members[j0].Val.XXX_UnionData[:], buf.DecodeBytes(20))
	}
	return nil
}

// CapoIpsetAddDelMembersReply defines message 'capo_ipset_add_del_members_reply'.
// InProgress: the message form may change in the future versions
type CapoIpsetAddDelMembersReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *CapoIpsetAddDelMembersReply) Reset() { *m = CapoIpsetAddDelMembersReply{} }
func (*CapoIpsetAddDelMembersReply) GetMessageName() string {
	return "capo_ipset_add_del_members_reply"
}
func (*CapoIpsetAddDelMembersReply) GetCrcString() string { return "e8d4e804" }
func (*CapoIpsetAddDelMembersReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoIpsetAddDelMembersReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *CapoIpsetAddDelMembersReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *CapoIpsetAddDelMembersReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

// CapoIpsetCreate defines message 'capo_ipset_create'.
// InProgress: the message form may change in the future versions
type CapoIpsetCreate struct {
	Type CapoIpsetType `binapi:"capo_ipset_type,name=type" json:"type,omitempty"`
}

func (m *CapoIpsetCreate) Reset()               { *m = CapoIpsetCreate{} }
func (*CapoIpsetCreate) GetMessageName() string { return "capo_ipset_create" }
func (*CapoIpsetCreate) GetCrcString() string   { return "69150c8a" }
func (*CapoIpsetCreate) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoIpsetCreate) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 1 // m.Type
	return size
}
func (m *CapoIpsetCreate) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint8(uint8(m.Type))
	return buf.Bytes(), nil
}
func (m *CapoIpsetCreate) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Type = CapoIpsetType(buf.DecodeUint8())
	return nil
}

// CapoIpsetCreateReply defines message 'capo_ipset_create_reply'.
// InProgress: the message form may change in the future versions
type CapoIpsetCreateReply struct {
	Retval int32  `binapi:"i32,name=retval" json:"retval,omitempty"`
	SetID  uint32 `binapi:"u32,name=set_id" json:"set_id,omitempty"`
}

func (m *CapoIpsetCreateReply) Reset()               { *m = CapoIpsetCreateReply{} }
func (*CapoIpsetCreateReply) GetMessageName() string { return "capo_ipset_create_reply" }
func (*CapoIpsetCreateReply) GetCrcString() string   { return "6a43f193" }
func (*CapoIpsetCreateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoIpsetCreateReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	size += 4 // m.SetID
	return size
}
func (m *CapoIpsetCreateReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	buf.EncodeUint32(m.SetID)
	return buf.Bytes(), nil
}
func (m *CapoIpsetCreateReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	m.SetID = buf.DecodeUint32()
	return nil
}

// CapoIpsetDelete defines message 'capo_ipset_delete'.
// InProgress: the message form may change in the future versions
type CapoIpsetDelete struct {
	SetID uint32 `binapi:"u32,name=set_id" json:"set_id,omitempty"`
}

func (m *CapoIpsetDelete) Reset()               { *m = CapoIpsetDelete{} }
func (*CapoIpsetDelete) GetMessageName() string { return "capo_ipset_delete" }
func (*CapoIpsetDelete) GetCrcString() string   { return "ceacdbcb" }
func (*CapoIpsetDelete) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoIpsetDelete) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.SetID
	return size
}
func (m *CapoIpsetDelete) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.SetID)
	return buf.Bytes(), nil
}
func (m *CapoIpsetDelete) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.SetID = buf.DecodeUint32()
	return nil
}

// CapoIpsetDeleteReply defines message 'capo_ipset_delete_reply'.
// InProgress: the message form may change in the future versions
type CapoIpsetDeleteReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *CapoIpsetDeleteReply) Reset()               { *m = CapoIpsetDeleteReply{} }
func (*CapoIpsetDeleteReply) GetMessageName() string { return "capo_ipset_delete_reply" }
func (*CapoIpsetDeleteReply) GetCrcString() string   { return "e8d4e804" }
func (*CapoIpsetDeleteReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoIpsetDeleteReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *CapoIpsetDeleteReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *CapoIpsetDeleteReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

// CapoPolicyCreate defines message 'capo_policy_create'.
// InProgress: the message form may change in the future versions
type CapoPolicyCreate struct {
	NumItems uint32           `binapi:"u32,name=num_items" json:"-"`
	Rules    []CapoPolicyItem `binapi:"capo_policy_item[num_items],name=rules" json:"rules,omitempty"`
}

func (m *CapoPolicyCreate) Reset()               { *m = CapoPolicyCreate{} }
func (*CapoPolicyCreate) GetMessageName() string { return "capo_policy_create" }
func (*CapoPolicyCreate) GetCrcString() string   { return "f7ed31a8" }
func (*CapoPolicyCreate) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoPolicyCreate) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.NumItems
	for j1 := 0; j1 < len(m.Rules); j1++ {
		var s1 CapoPolicyItem
		_ = s1
		if j1 < len(m.Rules) {
			s1 = m.Rules[j1]
		}
		size += 1 // s1.IsInbound
		size += 4 // s1.RuleID
	}
	return size
}
func (m *CapoPolicyCreate) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(uint32(len(m.Rules)))
	for j0 := 0; j0 < len(m.Rules); j0++ {
		var v0 CapoPolicyItem // Rules
		if j0 < len(m.Rules) {
			v0 = m.Rules[j0]
		}
		buf.EncodeBool(v0.IsInbound)
		buf.EncodeUint32(v0.RuleID)
	}
	return buf.Bytes(), nil
}
func (m *CapoPolicyCreate) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.NumItems = buf.DecodeUint32()
	m.Rules = make([]CapoPolicyItem, m.NumItems)
	for j0 := 0; j0 < len(m.Rules); j0++ {
		m.Rules[j0].IsInbound = buf.DecodeBool()
		m.Rules[j0].RuleID = buf.DecodeUint32()
	}
	return nil
}

// CapoPolicyCreateReply defines message 'capo_policy_create_reply'.
// InProgress: the message form may change in the future versions
type CapoPolicyCreateReply struct {
	Retval   int32  `binapi:"i32,name=retval" json:"retval,omitempty"`
	PolicyID uint32 `binapi:"u32,name=policy_id" json:"policy_id,omitempty"`
}

func (m *CapoPolicyCreateReply) Reset()               { *m = CapoPolicyCreateReply{} }
func (*CapoPolicyCreateReply) GetMessageName() string { return "capo_policy_create_reply" }
func (*CapoPolicyCreateReply) GetCrcString() string   { return "90f27405" }
func (*CapoPolicyCreateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoPolicyCreateReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	size += 4 // m.PolicyID
	return size
}
func (m *CapoPolicyCreateReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	buf.EncodeUint32(m.PolicyID)
	return buf.Bytes(), nil
}
func (m *CapoPolicyCreateReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	m.PolicyID = buf.DecodeUint32()
	return nil
}

// CapoPolicyDelete defines message 'capo_policy_delete'.
// InProgress: the message form may change in the future versions
type CapoPolicyDelete struct {
	PolicyID uint32 `binapi:"u32,name=policy_id" json:"policy_id,omitempty"`
}

func (m *CapoPolicyDelete) Reset()               { *m = CapoPolicyDelete{} }
func (*CapoPolicyDelete) GetMessageName() string { return "capo_policy_delete" }
func (*CapoPolicyDelete) GetCrcString() string   { return "ad833868" }
func (*CapoPolicyDelete) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoPolicyDelete) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.PolicyID
	return size
}
func (m *CapoPolicyDelete) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.PolicyID)
	return buf.Bytes(), nil
}
func (m *CapoPolicyDelete) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.PolicyID = buf.DecodeUint32()
	return nil
}

// CapoPolicyDeleteReply defines message 'capo_policy_delete_reply'.
// InProgress: the message form may change in the future versions
type CapoPolicyDeleteReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *CapoPolicyDeleteReply) Reset()               { *m = CapoPolicyDeleteReply{} }
func (*CapoPolicyDeleteReply) GetMessageName() string { return "capo_policy_delete_reply" }
func (*CapoPolicyDeleteReply) GetCrcString() string   { return "e8d4e804" }
func (*CapoPolicyDeleteReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoPolicyDeleteReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *CapoPolicyDeleteReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *CapoPolicyDeleteReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

// CapoPolicyUpdate defines message 'capo_policy_update'.
// InProgress: the message form may change in the future versions
type CapoPolicyUpdate struct {
	PolicyID uint32           `binapi:"u32,name=policy_id" json:"policy_id,omitempty"`
	NumItems uint32           `binapi:"u32,name=num_items" json:"-"`
	Rules    []CapoPolicyItem `binapi:"capo_policy_item[num_items],name=rules" json:"rules,omitempty"`
}

func (m *CapoPolicyUpdate) Reset()               { *m = CapoPolicyUpdate{} }
func (*CapoPolicyUpdate) GetMessageName() string { return "capo_policy_update" }
func (*CapoPolicyUpdate) GetCrcString() string   { return "e2097dd0" }
func (*CapoPolicyUpdate) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoPolicyUpdate) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.PolicyID
	size += 4 // m.NumItems
	for j1 := 0; j1 < len(m.Rules); j1++ {
		var s1 CapoPolicyItem
		_ = s1
		if j1 < len(m.Rules) {
			s1 = m.Rules[j1]
		}
		size += 1 // s1.IsInbound
		size += 4 // s1.RuleID
	}
	return size
}
func (m *CapoPolicyUpdate) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.PolicyID)
	buf.EncodeUint32(uint32(len(m.Rules)))
	for j0 := 0; j0 < len(m.Rules); j0++ {
		var v0 CapoPolicyItem // Rules
		if j0 < len(m.Rules) {
			v0 = m.Rules[j0]
		}
		buf.EncodeBool(v0.IsInbound)
		buf.EncodeUint32(v0.RuleID)
	}
	return buf.Bytes(), nil
}
func (m *CapoPolicyUpdate) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.PolicyID = buf.DecodeUint32()
	m.NumItems = buf.DecodeUint32()
	m.Rules = make([]CapoPolicyItem, m.NumItems)
	for j0 := 0; j0 < len(m.Rules); j0++ {
		m.Rules[j0].IsInbound = buf.DecodeBool()
		m.Rules[j0].RuleID = buf.DecodeUint32()
	}
	return nil
}

// CapoPolicyUpdateReply defines message 'capo_policy_update_reply'.
// InProgress: the message form may change in the future versions
type CapoPolicyUpdateReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *CapoPolicyUpdateReply) Reset()               { *m = CapoPolicyUpdateReply{} }
func (*CapoPolicyUpdateReply) GetMessageName() string { return "capo_policy_update_reply" }
func (*CapoPolicyUpdateReply) GetCrcString() string   { return "e8d4e804" }
func (*CapoPolicyUpdateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoPolicyUpdateReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *CapoPolicyUpdateReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *CapoPolicyUpdateReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

// CapoRuleCreate defines message 'capo_rule_create'.
// InProgress: the message form may change in the future versions
type CapoRuleCreate struct {
	Rule CapoRule `binapi:"capo_rule,name=rule" json:"rule,omitempty"`
}

func (m *CapoRuleCreate) Reset()               { *m = CapoRuleCreate{} }
func (*CapoRuleCreate) GetMessageName() string { return "capo_rule_create" }
func (*CapoRuleCreate) GetCrcString() string   { return "0a2d5fd6" }
func (*CapoRuleCreate) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoRuleCreate) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 1 // m.Rule.Af
	size += 1 // m.Rule.Action
	for j2 := 0; j2 < 3; j2++ {
		size += 4 // m.Rule.Filters[j2].Value
		size += 1 // m.Rule.Filters[j2].Type
		size += 1 // m.Rule.Filters[j2].ShouldMatch
	}
	size += 4 // m.Rule.NumEntries
	for j2 := 0; j2 < len(m.Rule.Matches); j2++ {
		var s2 CapoRuleEntry
		_ = s2
		if j2 < len(m.Rule.Matches) {
			s2 = m.Rule.Matches[j2]
		}
		size += 1      // s2.IsSrc
		size += 1      // s2.IsNot
		size += 1      // s2.Type
		size += 1 * 18 // s2.Data
	}
	return size
}
func (m *CapoRuleCreate) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint8(uint8(m.Rule.Af))
	buf.EncodeUint8(uint8(m.Rule.Action))
	for j1 := 0; j1 < 3; j1++ {
		buf.EncodeUint32(m.Rule.Filters[j1].Value)
		buf.EncodeUint8(uint8(m.Rule.Filters[j1].Type))
		buf.EncodeUint8(m.Rule.Filters[j1].ShouldMatch)
	}
	buf.EncodeUint32(uint32(len(m.Rule.Matches)))
	for j1 := 0; j1 < len(m.Rule.Matches); j1++ {
		var v1 CapoRuleEntry // Matches
		if j1 < len(m.Rule.Matches) {
			v1 = m.Rule.Matches[j1]
		}
		buf.EncodeBool(v1.IsSrc)
		buf.EncodeBool(v1.IsNot)
		buf.EncodeUint8(uint8(v1.Type))
		buf.EncodeBytes(v1.Data.XXX_UnionData[:], 18)
	}
	return buf.Bytes(), nil
}
func (m *CapoRuleCreate) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Rule.Af = ip_types.AddressFamily(buf.DecodeUint8())
	m.Rule.Action = CapoRuleAction(buf.DecodeUint8())
	for j1 := 0; j1 < 3; j1++ {
		m.Rule.Filters[j1].Value = buf.DecodeUint32()
		m.Rule.Filters[j1].Type = CapoRuleFilterType(buf.DecodeUint8())
		m.Rule.Filters[j1].ShouldMatch = buf.DecodeUint8()
	}
	m.Rule.NumEntries = buf.DecodeUint32()
	m.Rule.Matches = make([]CapoRuleEntry, m.Rule.NumEntries)
	for j1 := 0; j1 < len(m.Rule.Matches); j1++ {
		m.Rule.Matches[j1].IsSrc = buf.DecodeBool()
		m.Rule.Matches[j1].IsNot = buf.DecodeBool()
		m.Rule.Matches[j1].Type = CapoEntryType(buf.DecodeUint8())
		copy(m.Rule.Matches[j1].Data.XXX_UnionData[:], buf.DecodeBytes(18))
	}
	return nil
}

// CapoRuleCreateReply defines message 'capo_rule_create_reply'.
// InProgress: the message form may change in the future versions
type CapoRuleCreateReply struct {
	Retval int32  `binapi:"i32,name=retval" json:"retval,omitempty"`
	RuleID uint32 `binapi:"u32,name=rule_id" json:"rule_id,omitempty"`
}

func (m *CapoRuleCreateReply) Reset()               { *m = CapoRuleCreateReply{} }
func (*CapoRuleCreateReply) GetMessageName() string { return "capo_rule_create_reply" }
func (*CapoRuleCreateReply) GetCrcString() string   { return "b48f8052" }
func (*CapoRuleCreateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoRuleCreateReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	size += 4 // m.RuleID
	return size
}
func (m *CapoRuleCreateReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	buf.EncodeUint32(m.RuleID)
	return buf.Bytes(), nil
}
func (m *CapoRuleCreateReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	m.RuleID = buf.DecodeUint32()
	return nil
}

// CapoRuleDelete defines message 'capo_rule_delete'.
// InProgress: the message form may change in the future versions
type CapoRuleDelete struct {
	RuleID uint32 `binapi:"u32,name=rule_id" json:"rule_id,omitempty"`
}

func (m *CapoRuleDelete) Reset()               { *m = CapoRuleDelete{} }
func (*CapoRuleDelete) GetMessageName() string { return "capo_rule_delete" }
func (*CapoRuleDelete) GetCrcString() string   { return "d19bb6be" }
func (*CapoRuleDelete) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoRuleDelete) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.RuleID
	return size
}
func (m *CapoRuleDelete) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.RuleID)
	return buf.Bytes(), nil
}
func (m *CapoRuleDelete) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.RuleID = buf.DecodeUint32()
	return nil
}

// CapoRuleDeleteReply defines message 'capo_rule_delete_reply'.
// InProgress: the message form may change in the future versions
type CapoRuleDeleteReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *CapoRuleDeleteReply) Reset()               { *m = CapoRuleDeleteReply{} }
func (*CapoRuleDeleteReply) GetMessageName() string { return "capo_rule_delete_reply" }
func (*CapoRuleDeleteReply) GetCrcString() string   { return "e8d4e804" }
func (*CapoRuleDeleteReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoRuleDeleteReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *CapoRuleDeleteReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *CapoRuleDeleteReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

// CapoRuleUpdate defines message 'capo_rule_update'.
// InProgress: the message form may change in the future versions
type CapoRuleUpdate struct {
	RuleID uint32   `binapi:"u32,name=rule_id" json:"rule_id,omitempty"`
	Rule   CapoRule `binapi:"capo_rule,name=rule" json:"rule,omitempty"`
}

func (m *CapoRuleUpdate) Reset()               { *m = CapoRuleUpdate{} }
func (*CapoRuleUpdate) GetMessageName() string { return "capo_rule_update" }
func (*CapoRuleUpdate) GetCrcString() string   { return "a0535ee2" }
func (*CapoRuleUpdate) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *CapoRuleUpdate) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.RuleID
	size += 1 // m.Rule.Af
	size += 1 // m.Rule.Action
	for j2 := 0; j2 < 3; j2++ {
		size += 4 // m.Rule.Filters[j2].Value
		size += 1 // m.Rule.Filters[j2].Type
		size += 1 // m.Rule.Filters[j2].ShouldMatch
	}
	size += 4 // m.Rule.NumEntries
	for j2 := 0; j2 < len(m.Rule.Matches); j2++ {
		var s2 CapoRuleEntry
		_ = s2
		if j2 < len(m.Rule.Matches) {
			s2 = m.Rule.Matches[j2]
		}
		size += 1      // s2.IsSrc
		size += 1      // s2.IsNot
		size += 1      // s2.Type
		size += 1 * 18 // s2.Data
	}
	return size
}
func (m *CapoRuleUpdate) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.RuleID)
	buf.EncodeUint8(uint8(m.Rule.Af))
	buf.EncodeUint8(uint8(m.Rule.Action))
	for j1 := 0; j1 < 3; j1++ {
		buf.EncodeUint32(m.Rule.Filters[j1].Value)
		buf.EncodeUint8(uint8(m.Rule.Filters[j1].Type))
		buf.EncodeUint8(m.Rule.Filters[j1].ShouldMatch)
	}
	buf.EncodeUint32(uint32(len(m.Rule.Matches)))
	for j1 := 0; j1 < len(m.Rule.Matches); j1++ {
		var v1 CapoRuleEntry // Matches
		if j1 < len(m.Rule.Matches) {
			v1 = m.Rule.Matches[j1]
		}
		buf.EncodeBool(v1.IsSrc)
		buf.EncodeBool(v1.IsNot)
		buf.EncodeUint8(uint8(v1.Type))
		buf.EncodeBytes(v1.Data.XXX_UnionData[:], 18)
	}
	return buf.Bytes(), nil
}
func (m *CapoRuleUpdate) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.RuleID = buf.DecodeUint32()
	m.Rule.Af = ip_types.AddressFamily(buf.DecodeUint8())
	m.Rule.Action = CapoRuleAction(buf.DecodeUint8())
	for j1 := 0; j1 < 3; j1++ {
		m.Rule.Filters[j1].Value = buf.DecodeUint32()
		m.Rule.Filters[j1].Type = CapoRuleFilterType(buf.DecodeUint8())
		m.Rule.Filters[j1].ShouldMatch = buf.DecodeUint8()
	}
	m.Rule.NumEntries = buf.DecodeUint32()
	m.Rule.Matches = make([]CapoRuleEntry, m.Rule.NumEntries)
	for j1 := 0; j1 < len(m.Rule.Matches); j1++ {
		m.Rule.Matches[j1].IsSrc = buf.DecodeBool()
		m.Rule.Matches[j1].IsNot = buf.DecodeBool()
		m.Rule.Matches[j1].Type = CapoEntryType(buf.DecodeUint8())
		copy(m.Rule.Matches[j1].Data.XXX_UnionData[:], buf.DecodeBytes(18))
	}
	return nil
}

// CapoRuleUpdateReply defines message 'capo_rule_update_reply'.
// InProgress: the message form may change in the future versions
type CapoRuleUpdateReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *CapoRuleUpdateReply) Reset()               { *m = CapoRuleUpdateReply{} }
func (*CapoRuleUpdateReply) GetMessageName() string { return "capo_rule_update_reply" }
func (*CapoRuleUpdateReply) GetCrcString() string   { return "e8d4e804" }
func (*CapoRuleUpdateReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *CapoRuleUpdateReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *CapoRuleUpdateReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *CapoRuleUpdateReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

func init() { file_capo_binapi_init() }
func file_capo_binapi_init() {
	api.RegisterMessage((*CapoConfigurePolicies)(nil), "capo_configure_policies_3ca1772c")
	api.RegisterMessage((*CapoConfigurePoliciesReply)(nil), "capo_configure_policies_reply_e8d4e804")
	api.RegisterMessage((*CapoControlPing)(nil), "capo_control_ping_51077d14")
	api.RegisterMessage((*CapoControlPingReply)(nil), "capo_control_ping_reply_f6b0b8ca")
	api.RegisterMessage((*CapoGetVersion)(nil), "capo_get_version_51077d14")
	api.RegisterMessage((*CapoGetVersionReply)(nil), "capo_get_version_reply_9b32cf86")
	api.RegisterMessage((*CapoIpsetAddDelMembers)(nil), "capo_ipset_add_del_members_e7056d10")
	api.RegisterMessage((*CapoIpsetAddDelMembersReply)(nil), "capo_ipset_add_del_members_reply_e8d4e804")
	api.RegisterMessage((*CapoIpsetCreate)(nil), "capo_ipset_create_69150c8a")
	api.RegisterMessage((*CapoIpsetCreateReply)(nil), "capo_ipset_create_reply_6a43f193")
	api.RegisterMessage((*CapoIpsetDelete)(nil), "capo_ipset_delete_ceacdbcb")
	api.RegisterMessage((*CapoIpsetDeleteReply)(nil), "capo_ipset_delete_reply_e8d4e804")
	api.RegisterMessage((*CapoPolicyCreate)(nil), "capo_policy_create_f7ed31a8")
	api.RegisterMessage((*CapoPolicyCreateReply)(nil), "capo_policy_create_reply_90f27405")
	api.RegisterMessage((*CapoPolicyDelete)(nil), "capo_policy_delete_ad833868")
	api.RegisterMessage((*CapoPolicyDeleteReply)(nil), "capo_policy_delete_reply_e8d4e804")
	api.RegisterMessage((*CapoPolicyUpdate)(nil), "capo_policy_update_e2097dd0")
	api.RegisterMessage((*CapoPolicyUpdateReply)(nil), "capo_policy_update_reply_e8d4e804")
	api.RegisterMessage((*CapoRuleCreate)(nil), "capo_rule_create_0a2d5fd6")
	api.RegisterMessage((*CapoRuleCreateReply)(nil), "capo_rule_create_reply_b48f8052")
	api.RegisterMessage((*CapoRuleDelete)(nil), "capo_rule_delete_d19bb6be")
	api.RegisterMessage((*CapoRuleDeleteReply)(nil), "capo_rule_delete_reply_e8d4e804")
	api.RegisterMessage((*CapoRuleUpdate)(nil), "capo_rule_update_a0535ee2")
	api.RegisterMessage((*CapoRuleUpdateReply)(nil), "capo_rule_update_reply_e8d4e804")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*CapoConfigurePolicies)(nil),
		(*CapoConfigurePoliciesReply)(nil),
		(*CapoControlPing)(nil),
		(*CapoControlPingReply)(nil),
		(*CapoGetVersion)(nil),
		(*CapoGetVersionReply)(nil),
		(*CapoIpsetAddDelMembers)(nil),
		(*CapoIpsetAddDelMembersReply)(nil),
		(*CapoIpsetCreate)(nil),
		(*CapoIpsetCreateReply)(nil),
		(*CapoIpsetDelete)(nil),
		(*CapoIpsetDeleteReply)(nil),
		(*CapoPolicyCreate)(nil),
		(*CapoPolicyCreateReply)(nil),
		(*CapoPolicyDelete)(nil),
		(*CapoPolicyDeleteReply)(nil),
		(*CapoPolicyUpdate)(nil),
		(*CapoPolicyUpdateReply)(nil),
		(*CapoRuleCreate)(nil),
		(*CapoRuleCreateReply)(nil),
		(*CapoRuleDelete)(nil),
		(*CapoRuleDeleteReply)(nil),
		(*CapoRuleUpdate)(nil),
		(*CapoRuleUpdateReply)(nil),
	}
}
