From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: hedi bouattour <hedibouattour2010@gmail.com>
Date: Mon, 29 Sep 2025 10:00:28 +0000
Subject: [PATCH 4/4] fix npol tests and add acl plugin in npol

Change-Id: Icce132779a9cc4b1ea828b2ac84bb478ddb4b1b3
---
 src/plugins/npol/npol.api                    |  1 +
 src/plugins/npol/npol_interface.c            | 19 ++++++++++-
 src/plugins/npol/npol_policy.h               |  2 ++
 {src/plugins/npol/test => test}/test_npol.py | 36 +++++++++++++++-----
 4 files changed, 48 insertions(+), 10 deletions(-)
 rename {src/plugins/npol/test => test}/test_npol.py (97%)

diff --git a/src/plugins/npol/npol.api b/src/plugins/npol/npol.api
index e576cb43f..1c953f86f 100644
--- a/src/plugins/npol/npol.api
+++ b/src/plugins/npol/npol.api
@@ -261,6 +261,7 @@ autoreply define npol_configure_policies {
   u32 sw_if_index;
   u32 num_rx_policies;
   u32 num_tx_policies;
+  u32 num_profiles;
   u32 total_ids;
   u8 invert_rx_tx;
   vl_api_npol_policy_default_t policy_default_rx;
diff --git a/src/plugins/npol/npol_interface.c b/src/plugins/npol/npol_interface.c
index a015b8cc7..4f9c23c7c 100644
--- a/src/plugins/npol/npol_interface.c
+++ b/src/plugins/npol/npol_interface.c
@@ -51,7 +51,7 @@ npol_configure_policies (u32 sw_if_index, u32 num_rx_policies,
   clib_bihash_kv_8_32_t kv = { sw_if_index, { 0 } };
   npol_interface_config_t *conf = (npol_interface_config_t *) &kv.value;
   npol_interface_config_t *old_conf;
-  u32 i = 0;
+  u32 i = 0, found = 0;
 
   if (pool_is_free_index (vnet_get_main ()->interface_main.sw_interfaces,
 			  sw_if_index))
@@ -70,6 +70,7 @@ npol_configure_policies (u32 sw_if_index, u32 num_rx_policies,
       vec_free (old_conf->rx_policies);
       vec_free (old_conf->tx_policies);
       vec_free (old_conf->profiles);
+      found = 1;
     }
 
   for (i = 0; i < num_rx_policies + num_tx_policies + num_profiles; i++)
@@ -92,7 +93,15 @@ npol_configure_policies (u32 sw_if_index, u32 num_rx_policies,
     conf->profiles[i] = policy_ids[num_rx_policies + num_tx_policies + i];
 
   clib_bihash_add_del_8_32 (&npol_main.if_config, &kv, 1 /* is_add */);
+if (!found)
+    {
+      npol_main.acl_plugin.wip_add_del_custom_access_io_policy (
+	1 /* is_add */, sw_if_index, 0 /* is_input */, npol_match_func);
+      npol_main.acl_plugin.wip_add_del_custom_access_io_policy (
+	1 /* is_add */, sw_if_index, 1 /* is_input */, npol_match_func);
+    }
 
+  npol_main.acl_plugin.wip_clear_sessions (sw_if_index);
   return 0;
 
 error:
@@ -127,10 +136,18 @@ npol_sw_interface_add_del (vnet_main_t *vnm, u32 sw_if_index, u32 is_add)
   clib_warning ("unconfiguring policies for if %u deleted", sw_if_index);
 #endif
   clib_bihash_add_del_8_32 (&npol_main.if_config, &kv, 0 /* is_add */);
+  rv = npol_main.acl_plugin.wip_add_del_custom_access_io_policy (
+    0 /* is_add */, sw_if_index, 0 /* is_input */
+    ,
+    npol_match_func);
 #if NPOL_DEBUG > 0
   if (rv)
     clib_warning ("error deleting caiop (output): %d", rv);
 #endif
+  rv = npol_main.acl_plugin.wip_add_del_custom_access_io_policy (
+    0 /* is_add */, sw_if_index, 1 /* is_input */
+    ,
+    npol_match_func);
 #if NPOL_DEBUG > 0
   if (rv)
     clib_warning ("error deleting caiop (input): %d", rv);
diff --git a/src/plugins/npol/npol_policy.h b/src/plugins/npol/npol_policy.h
index 86c00220c..9db113bdb 100644
--- a/src/plugins/npol/npol_policy.h
+++ b/src/plugins/npol/npol_policy.h
@@ -18,6 +18,8 @@
 
 #include <npol/npol.h>
 
+typedef vl_api_npol_policy_default_t npol_policy_default_t;
+
 typedef struct
 {
   /* VLIB_RX for inbound
diff --git a/src/plugins/npol/test/test_npol.py b/test/test_npol.py
similarity index 97%
rename from src/plugins/npol/test/test_npol.py
rename to test/test_npol.py
index 6dcb15e4d..04be23881 100644
--- a/src/plugins/npol/test/test_npol.py
+++ b/test/test_npol.py
@@ -12,7 +12,8 @@ from ipaddress import (
 )
 from itertools import product
 
-from framework import VppTestCase, VppTestRunner
+from framework import VppTestCase
+from asfframework import VppTestRunner
 from scapy.layers.inet import ICMP, IP, TCP, UDP, ICMPerror, IPerror, TCPerror, UDPerror
 from scapy.layers.inet6 import (
     ICMPv6DestUnreach,
@@ -216,11 +217,14 @@ class BaseNpolTest(VppTestCase):
     def setUpClass(self):
         super(BaseNpolTest, self).setUpClass()
         # We can't define these before the API is loaded, so here they are...
-        global ACTION_ALLOW, ACTION_DENY, ACTION_PASS, ACTION_LOG
+        global ACTION_ALLOW, ACTION_DENY, ACTION_PASS, ACTION_LOG, DEFAULT_ALLOW, DEFAULT_DENY, DEFAULT_PASS
         ACTION_ALLOW = VppEnum.vl_api_npol_rule_action_t.NPOL_ALLOW
         ACTION_DENY = VppEnum.vl_api_npol_rule_action_t.NPOL_DENY
         ACTION_PASS = VppEnum.vl_api_npol_rule_action_t.NPOL_PASS
         ACTION_LOG = VppEnum.vl_api_npol_rule_action_t.NPOL_LOG
+        DEFAULT_ALLOW = VppEnum.vl_api_npol_policy_default_t.NPOL_DEFAULT_ALLOW
+        DEFAULT_DENY = VppEnum.vl_api_npol_policy_default_t.NPOL_DEFAULT_DENY
+        DEFAULT_PASS = VppEnum.vl_api_npol_policy_default_t.NPOL_DEFAULT_PASS
         global FILTER_TYPE_NONE, FILTER_TYPE_L4_PROTO, FILTER_TYPE_ICMP_CODE, FILTER_TYPE_ICMP_TYPE
         FILTER_TYPE_NONE = (
             VppEnum.vl_api_npol_rule_filter_type_t.NPOL_RULE_FILTER_NONE_TYPE
@@ -268,18 +272,32 @@ class BaseNpolTest(VppTestCase):
     def tearDown(self):
         super(BaseNpolTest, self).tearDown()
 
-    def configure_policies(self, interface, ingress, egress, profiles, invert_tx_rx):
+    def configure_policies(
+        self,
+        interface,
+        ingress,
+        egress,
+        profiles,
+        defrxpolicy=1,
+        deftxpolicy=1,
+        defrxprofile=1,
+        deftxprofile=1,
+    ):
         id_list = []
         for policy in ingress + egress + profiles:
             id_list.append(policy._policy_id)
-
         r = self.vapi.npol_configure_policies(
             interface.sw_if_index,
             len(ingress),
             len(egress),
+            len(profiles),
             len(ingress) + len(egress) + len(profiles),
+            1,
+            defrxpolicy,
+            deftxpolicy,
+            defrxprofile,
+            deftxprofile,
             id_list,
-            invert_tx_rx,
         )
         self.assertEqual(0, r.retval)
 
@@ -952,11 +970,11 @@ class TestNpolPolicies(BaseNpolTest):
         self.send_test_packets(self.pg0, self.pg1, [matching], [not_matching])
 
         # policies configured at dst
-        self.configure_policies(self.pg0, [], [], [])
+        self.configure_policies(self.pg0, [], [], [], 0, 0)
         self.send_test_packets(self.pg0, self.pg1, [matching], [not_matching])
 
         # no policies
-        self.configure_policies(self.pg1, [], [], [])
+        self.configure_policies(self.pg1, [], [], [], 0, 0)
         self.send_test_packets(self.pg0, self.pg1, [matching, not_matching], [])
 
     def test_default_verdict(self):
@@ -997,7 +1015,7 @@ class TestNpolPolicies(BaseNpolTest):
         policy5.add_vpp_config()
 
         # Test profile default deny: 1 allow rule, pass_id=0
-        self.configure_policies(self.pg1, [], [], [policy1])
+        self.configure_policies(self.pg1, [], [], [policy1], 2, 2, 1, 1)
         passing = [self.base_ip_packet() / TCP(sport=1, dport=1000) / random_payload()]
         dropped = [self.base_ip_packet() / TCP(sport=1, dport=2000) / random_payload()]
         self.send_test_packets(self.pg0, self.pg1, passing, dropped)
@@ -1100,7 +1118,7 @@ class TestNpolPolicies(BaseNpolTest):
         ]
         self.send_test_packets(self.pg0, self.pg1, passing, dropped)
         # Cleanup
-        self.configure_policies(self.pg1, [], [], [])
+        self.configure_policies(self.pg1, [], [], [], 0, 0)
         policy.remove_vpp_config()
         rule1.remove_vpp_config()
         rule2.remove_vpp_config()
-- 
2.34.1

